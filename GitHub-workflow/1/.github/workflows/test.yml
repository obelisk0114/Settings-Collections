name: Continuous Integration / Continuous Deployment

on:
  push:
    branches:
    - main
    - 'release-*'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  Check_Timeout_Minutes: 15
  Unit_Test_Timeout_Minutes: 15
  Lint_Timeout_Minutes: 10
  E2E_Timeout_Minutes: 30

jobs:

  lint-js:
      name: Lint JavaScript
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: lint-js
          timeout-minutes: ${{ fromJSON(env.Lint_Timeout_Minutes) }}
          run: docker-compose run --rm web ./scripts/eslint
  
  lint-css:
      name: Lint CSS
      if: "!github.event.pull_request.draft"
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: lint-css
          timeout-minutes: ${{ fromJSON(env.Lint_Timeout_Minutes) }}
          run: ...

  check-ts:
      name: Check TypeScript build
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: check-ts
          timeout-minutes: ${{ fromJSON(env.Check_Timeout_Minutes) }}
          run: ...

  check-migrations:
      name: Check for missing migrations
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: check-migrations
          timeout-minutes: ${{ fromJSON(env.Check_Timeout_Minutes) }}
          run: ...

  test-python:
      name: Run Python tests
      if: "!github.event.pull_request.draft"
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Setup
          run: |
            ...
            ...
        - name: test-python
          timeout-minutes: ${{ fromJSON(env.Unit_Test_Timeout_Minutes) }}
          run: ...

  test-js:
      name: Run JavaScript tests
      if: github.event.pull_request.draft == false
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: test-js
          timeout-minutes: ${{ fromJSON(env.Unit_Test_Timeout_Minutes) }}
          run: ...

  test-e2e:
      name: Run end-to-end browser tests
      if: "!github.event.pull_request.draft"
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Check running containers
          run: |
              docker ps -a
        - name: Run end-to-end browser tests
          timeout-minutes: ${{ fromJSON(env.E2E_Timeout_Minutes) }}
          run: | 
              docker compose exec web <integration_test_location>
              ...
        # When you use expressions in an `if` conditional, you may omit the `${{ }}` expression syntax
        # because GitHub Actions automatically evaluates the if conditional as an expression.
        - name: Upload end-to-end browser test failure screenshots
          uses: actions/upload-artifact@v3
          if: failure()
          with:
            name: browser-test-screenshots
            path: integration_tests_tmp

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint-js, lint-css, check-ts, check-migrations, test-python, test-js, test-e2e]
    # This restricts this deploy job to only run for the branch build rather
    # than the pull_request build.
    if: github.event_name == 'push'
    env:
      <KEY_ID>: ${{ secrets.<KEY_ID> }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: ...

      - name: Build and upload Docker image
        run: ...

      # Only automatically trigger a deployment on the <release> branch
      - if: github.ref == 'refs/heads/<release>'   
        name: Deploy to site
        uses: ...
        with:
          <url>: ...